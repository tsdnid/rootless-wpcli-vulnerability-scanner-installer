#!/bin/bash

VULN_API_PROVIDER=wordfence
# if need VULN_API_TOKEN, you need to define it manually inside .bashrc especially for wpscan

# CREATE .wp-cli dir
if [ ! -d "$HOME/.wp-cli" ]; then
    mkdir -m 755 "$HOME/.wp-cli"
fi

# CREATE bin dir inside home
if [ ! -d "$HOME/.bin" ]; then
    mkdir -m 755 "$HOME/.bin"
fi

cp /usr/local/lib/wp-cli-packages/composer.json "$HOME/.wp-cli/"

# install wp-cli and place it inside $HOME/.bin
curl -o "$HOME/.bin/wp" https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
chmod 755 "$HOME/.bin/wp"

# test wp-cli
if ! php "$HOME/.bin/wp" --info > /dev/null 2>&1; then
    echo "Warning: wp-cli installation failed!"
    exit 1
fi


# get wp cli version
WP_CLI_VERSION=$(php "$HOME/.bin/wp" --version | cut -d" " -f2)
# dowload wp completion
curl -o "$HOME/.bin/wp-completion.bash" "https://raw.githubusercontent.com/wp-cli/wp-cli/v$WP_CLI_VERSION/utils/wp-completion.bash"
chmod 755 "$HOME/.bin/wp-completion.bash"


# set PATH for $HOME/.bin
if ! grep -v "#" "$HOME/.bashrc" | grep -q "export PATH=\$PATH:$HOME/.bin"; then
    echo "# set PATH for $HOME/.bin" >> "$HOME/.bashrc"
    echo "export PATH=\$PATH:$HOME/.bin" >> "$HOME/.bashrc"
fi

# set source for wp-completion.bash
if ! grep -v "#" "$HOME/.bashrc" | grep -q "source \$HOME/.bin/wp-completion.bash"; then
    echo "# set wp-completion" >> "$HOME/.bashrc"
    echo "source \$HOME/.bin/wp-completion.bash" >> "$HOME/.bashrc"
fi

# set WP_CLI_PACKAGES_DIR to $HOME/.wp-cli/packages
if ! grep -v "#" "$HOME/.bashrc" | grep -q "export WP_CLI_PACKAGES_DIR=$HOME/.wp-cli/packages"; then
    echo "# set WP_CLI_PACKAGES_DIR to $HOME/.wp-cli/packages" >> "$HOME/.bashrc"
    echo "export WP_CLI_PACKAGES_DIR=$HOME/.wp-cli/packages" >> "$HOME/.bashrc"
fi

# sourcing .bashrc
source "$HOME/.bashrc"

# install wpcli-vulnerability-scanner
# it is using https://github.com/10up/wpcli-vulnerability-scanner
php "$HOME/.bin/wp" package install 10up/wpcli-vulnerability-scanner:dev-trunk

# set vuln api provider in .bashrc and define it inside wp-config.php
# by default using wordfence intelligence
echo "# set vuln_api_provider" >> "$HOME/.bashrc"
# check if using correct API Provider
if ! grep -v "#" "$HOME/.bashrc" | grep -E -q "export VULN_API_PROVIDER( )?=( )?'?(wordfence|wpscan|patchstack)'?"; then
    if grep -v "#" "$HOME/.bashrc" | grep -E -q "export VULN_API_PROVIDER( )?=( )?$"; then
        WRONG_API_PROVIDER_FORMAT=$(grep -v "#" "$HOME/.bashrc" | grep -E "export VULN_API_PROVIDER( )?=( )?$")
        sed -i "/$WRONG_API_PROVIDER_FORMAT/d" "$HOME/.bashrc"
        echo "export VULN_API_PROVIDER=$VULN_API_PROVIDER" >> "$HOME/.bashrc"
    else
        API_PROVIDER=$(grep -v "#" "$HOME/.bashrc" | grep -E "export VULN_API_PROVIDER( )?=( )?'?[[:print:]]'?" | awk -F"= " '{print $2}')
        if [ -n "$API_PROVIDER" ]; then
            if [[ ! $API_PROVIDER =~ \'?(wordfence|wpscan|patchstack)?\'$ ]]; then
                WRONG_API_PROVIDER_FORMAT=$(grep -v "#" "$HOME/.bashrc" | grep -E "export VULN_API_PROVIDER( )?=( )?'?[[:print:]]'?")
                sed -i "/$WRONG_API_PROVIDER_FORMAT/d" "$HOME/.bashrc"
                echo "export VULN_API_PROVIDER=$VULN_API_PROVIDER" >> "$HOME/.bashrc"
            fi
        else
            echo "export VULN_API_PROVIDER=$VULN_API_PROVIDER" >> "$HOME/.bashrc"
        fi
    fi
fi

# find wp-config.php
find "$HOME" -name wp-config.php | while read c; do
    # add newline
    echo -e "\n" >> "$c"
    # check if VULN_API_PROVIDER has been defined in wp-config.php
    # if not then define it
    if ! grep -v "\/\*\|\*" "$c" | grep -E -q "define\(( )*'VULN_API_PROVIDER'( )*,( )*[[:print:]]+( )*\)"; then
        echo "define('VULN_API_PROVIDER',getenv('VULN_API_PROVIDER'));" >> "$c"
    fi

    # check if VULN_API_TOKEN has been defined in wp-config.php
    # if not then define it
    if ! grep -v "\/\*\|\*" "$c" | grep -E -q "define\(( )*'VULN_API_TOKEN'( )*,( )*[[:print:]]+( )*\)"; then
        cat << EOF >> "$c"
if (getenv('VULN_API_TOKEN')) {
	define('VULN_API_TOKEN',getenv('VULN_API_TOKEN'));
}
EOF
    fi
    # all of constant variable for wp-cli-vuln-scan above is using environment variables that has been set in .bashrc
done
